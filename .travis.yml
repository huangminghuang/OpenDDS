sudo: true
language: cpp

env:
  matrix:
    - DEBUG=0 PIPELINE="Release"
    - DEBUG=1 PIPELINE="Debug"
    - INLINE=0 PIPELINE="NoInline"
    - BIT=0 PIPELINE="NoBuildInTopic"
    - STATIC=1 PIPELINE="Static"
    - SAFETY_PROFILE=1 PIPELINE="SafetyProfile"
    - USES_WCHAR=1 PIPELINE="WChar"
  global:
    - COMPILER=g++-6

matrix:
  include:
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9
          packages:
            - libxerces-c-dev
            - clang++-3.9
            - ninja-build
      env: COMPILER=clang++-3.9 PIPELINE="Clang"
    # - os: osx
    #   osx_image: xcode8.3
    #   env: COMPILER=c++
    #   install:
    #     - brew install ccache ninja
    #     - PATH=$PATH:/usr/local/opt/ccache/libexec

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - libxerces-c-dev
      - g++-6
      - ninja-build

cache: pip
before_install:
  - git clone -b cmake --depth 1 git://github.com/huangminghuang/ACE_TAO.git
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      mkdir $HOME/usr;
      export PATH="$HOME/usr/bin:$PATH";
      wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh;
      chmod +x cmake-3.7.2-Linux-x86_64.sh;
      ./cmake-3.7.2-Linux-x86_64.sh --prefix=$HOME/usr --exclude-subdir --skip-license;
    fi
  - pip install --user awscli
  - mkdir -p ~/.cache
  - aws s3 sync --quiet s3://com.ociweb.opendds/$TRAVIS_BRANCH/$PIPELINE/.ccache ~/.ccache || true

branches:
  only:
    - cmake

before_script:
  - export
  - if [ "$FUZZ" == "1" ]; then
        tar czf modeling_plugins.tar.gz tools/modeling/plugins;
        rm -rf tools/modeling/plugins tools/IntermediateTypeLang/cpp/rapidjson;
        perl $DDS_ROOT/tools/scripts/dds_fuzz.pl;
        tar xzf modeling_plugins.tar.gz;
        rm modeling_plugins.tar.gz;
    fi
  - if [ "$INLINE" == "0" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DACE_INLINE=OFF"; fi
  - if [ "$BIT" == "0" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DOPENDDS_HAS_BUILT_IN_TOPICS=OFF"; fi
  - if [ "$STATIC" == "1" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DBUILD_SHARED_LIBS=OFF"; fi
  - if [ "$DEBUG" == "0" ]; then
      DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DCMAKE_BUILD_TYPE=RELEASE";
    else
      DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DCMAKE_BUILD_TYPE=DEBUG";
    fi
  - if [ "$SAFETY_PROFILE" == "1" ]; then
         DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DOPENDDS_SAFETY_PROFILE=BASE";
    fi
  - if [ "$USES_WCHAR" == "1" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DACE_USES_WCHAR=ON"; fi
  - DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DACE_TAO_SOURCE_DIR=$TRAVIS_BUILD_DIR/ACE_TAO"

script:
  - export CXX=$COMPILER
  - mkdir build
  - cd build
  - echo DDS_BUILD_FLAGS=$DDS_BUILD_FLAGS
  # - printf "max_size=450M\nsloppiness=include_file_ctime;include_file_mtime" > ~/.ccache/ccache.conf
  - cmake -GNinja $DDS_BUILD_FLAGS .. && ninja -j 6

after_success:
  - aws s3 sync --quiet --delete ~/.ccache s3://com.ociweb.opendds/$TRAVIS_BRANCH/$PIPELINE/.ccache || true
after_failure:
  - aws s3 sync --quiet --delete ~/.ccache s3://com.ociweb.opendds/$TRAVIS_BRANCH/$PIPELINE/.ccache || true
