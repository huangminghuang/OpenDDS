## "sudo: true" environment is much slower than the "sudo: false" environment even though it provides larger memory.
sudo: false
dist: trusty
language: cpp

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-3.9
    packages:
      - libxerces-c-dev
      - ninja-build
      - clang++-3.9
      - g++-6

cache: pip
before_install:
  - git clone -b cmake --depth 1 git://github.com/huangminghuang/ACE_TAO.git
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      mkdir $HOME/usr;
      export PATH="$HOME/usr/bin:$PATH";
      wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh;
      chmod +x cmake-3.7.2-Linux-x86_64.sh;
      ./cmake-3.7.2-Linux-x86_64.sh --prefix=$HOME/usr --exclude-subdir --skip-license;
    fi
  - pip install --user awscli

branches:
  only:
    - cmake

before_script:
  - export
  - if [ "$FUZZ" == "1" ]; then
        tar czf modeling_plugins.tar.gz tools/modeling/plugins;
        rm -rf tools/modeling/plugins tools/IntermediateTypeLang/cpp/rapidjson;
        perl tools/scripts/dds_fuzz.pl;
        tar xzf modeling_plugins.tar.gz;
        rm modeling_plugins.tar.gz;
    fi
  - if [ "$INLINE" == "0" ]; then BUILD_FLAGS="$BUILD_FLAGS -DACE_INLINE=OFF"; fi
  - if [ "$STATIC" == "1" ]; then BUILD_FLAGS="$BUILD_FLAGS -DBUILD_SHARED_LIBS=OFF"; fi
  - if [ "$DEBUG" == "1" ]; then
      BUILD_FLAGS="$BUILD_FLAGS -DCMAKE_BUILD_TYPE=DEBUG";
    else
      BUILD_FLAGS="$BUILD_FLAGS -DCMAKE_BUILD_TYPE=RELEASE";
    fi
  - if [ "$USES_WCHAR" == "1" ]; then BUILD_FLAGS="$BUILD_FLAGS -DACE_USES_WCHAR=ON"; fi
  - if [ "$BIT" == "0" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DOPENDDS_HAS_BUILT_IN_TOPICS=OFF"; fi
  - if [ "$MULTI_TOPIC" == "0" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DOPENDDS_HAS_MULTI_TOPIC=OFF"; fi
  - if [ "$JAVA" == "0" ]; then DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DCMAKE_DISABLE_FIND_PACKAGE_JAVA=TRUE"; fi
  - if [ -n "$SAFETY_PROFILE" ]; then
         DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DOPENDDS_SAFETY_PROFILE=$SAFETY_PROFILE -DACE_FACE_DEV=ON";
    fi
  ## we need to disable ccahe explicitly because it is installed in the travis ci environment but the environment
  ## does not have enough disk space or network bandwidth to cache all OpenDDS object code
  - export BUILD_FLAGS="$BUILD_FLAGS -DCCACHE=OFF -DACE_UNITY_BUILD=ON"
  - export BUILD_JOBS=4
  - export DDS_BUILD_FLAGS="$DDS_BUILD_FLAGS -DACE_TAO_SOURCE_DIR=$TRAVIS_BUILD_DIR/ACE_TAO $BUILD_FLAGS"
  - if [ "$ANDROID" == "1" ]; then
      export ANDROID_NDK_REVISION=13b;
      export ANDROID_API_VERSION=21;
      export TARGET_ARCH=arm;
      export TERM=dumb;
      curl -L http://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip -O;
      unzip -q android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip;
      export CROSS_ROOT=`pwd`/arm-linux-androideabi;
      cd android-ndk-r${ANDROID_NDK_REVISION} && ./build/tools/make_standalone_toolchain.py --arch ${TARGET_ARCH} --api ${ANDROID_API_VERSION} --install-dir=${CROSS_ROOT};
      cd ..;
    fi

jobs:
  include:
    - stage: build
      os: osx
      osx_image: xcode9
      install:
        - brew install ninja awscli
      script: ./travis_build.sh MacOS
      env: DEBUG=0 COMPILER=c++
    - stage: build
      script: ./travis_build.sh Release
      env: DEBUG=0 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh Debug
      env: DEBUG=1 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh NoInline
      env: INLINE=0 DEBUG=1 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh NoBit
      env: BIT=0 DEBUG=0 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh NoMultiTopic
      env: MULTI_TOPIC=0 DEBUG=0 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh Static
      ## static debug build would cause out of disk space error on travis ci
      env: STATIC=1 DEBUG=0 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh WChar
      env: USE_WCHAR=1 DEBUG=0 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh Clang
      env: DEBUG=0 COMPILER=clang++-3.9
    - stage: build
      script: ./travis_build.sh SafetyProfile
      env: SAFETY_PROFILE=BASE DEBUG=0 COMPILER=g++-6
    - stage: build
      script: ./travis_build.sh Android
      env: ANDROID=1 DEBUG=0

    - stage: test
      script: ./travis_run_tests.sh Release
      env: DEBUG=0 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh Debug
      env: DEBUG=1 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh NoInline
      env: INLINE=0 DEBUG=1 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh NoBit
      env: Bit=0 DEBUG=0 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh Static
      env: STATIC=1 DEBUG=0 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh SafetyProfile
      env: SAFETY_PROFILE=BASE DEBUG=0 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh WChar
      env: USE_WCHAR=1 DEBUG=0 COMPILER=g++-6
    - stage: test
      script: ./travis_run_tests.sh Clang
      env: DEBUG=0 COMPILER=clang++-3.9