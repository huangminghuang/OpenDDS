branches:
  only:
    - cmake

os: Visual Studio 2017

# environment variables
environment:
  aws_access_key_id:
    secure: IeVa1jj7bYXS9IpKngm7FYKI1AaRl5IzVNrN87F/3sg=
  aws_secret_access_key:
    secure: JcIGXaS/GimRpZ2TyVdVnSUvTT2hmHCp4DDhpln+x4u/l8njhWC0kHfxJ3FQFm/u
  aws_region: us-east-1
  s3_bucket: com.ociweb.opendds

clone_depth: 15

install:
  - git clone -q -b cmake --depth 1 git://github.com/huangminghuang/ACE_TAO.git
  - cmake -Bbuild -H. -A %platform% -DACE_UNITY_BUILD=ON

platform:
  - x64

configuration:
  - Debug

build:
  parallel: true
  project: build/OpenDDS.sln

test_script:
  - ps: |
        cd build
        ctest -C $env:configuration -j 6 | % {
          Write-Host $_
          if ($_ -match 'Start\s+(\d+):\s+([^ ]+)') {
            $name = $matches[2].replace('__', ' ')
            Add-AppveyorTest -Name $name -Framework xunit -Filename $matches[1] -OutCome Running
          } elseif ($_ -match '\d+/\d+ Test\s+#(\d+)') {
            $items = $_.trim() -split '\s+|\*\*\*'
            $outcome = $items[5]
            if ($outcome -eq 'Timeout'){
              $outcome = 'Cancelled'
            }
            [float]$duration=$items[6]
            $duration *= 1000
            $name = $items[3].replace('__', ' ')
            Add-AppveyorTest -Name $name -Framework xunit -Filename $matches[1] -OutCome $outcome -Duration $duration
          }
        }
on_finish:
  - ps: >
      cd $env:APPVEYOR_BUILD_FOLDER\build;
      $aws_website="http://$($env:s3_bucket).s3-website-$($env:aws_region).amazonaws.com";
      $prefix="tests/appveyor/$($env:APPVEYOR_BUILD_NUMBER)/$($env:APPVEYOR_JOB_NUMBER)";
      python ..\ctestlog2json.py --generated_url_prefix=$aws_website/$prefix --output_dir=appveyor_tests;

      $root = Resolve-Path $env:APPVEYOR_BUILD_FOLDER\build\appveyor_tests;

      [IO.Directory]::GetFiles($root.Path, '*.*', 'AllDirectories') | % {
        $f = $_.Substring($root.Path.Length + 1);
        Push-AppveyorArtifact $_ -FileName $f -DeploymentName to-publish;
        Write-S3Object -BucketName $env:s3_bucket -File $_ -Key $prefix/$f -CannedACLName public-read;
      }

